@page "/"
@using BlazingBooks.Shared.Interfaces
@using BlazorApp1.Clients
@using BlazorApp1.Models
@using GamesBlazor.Shared.States
@using Microsoft.AspNetCore.Authorization
@using System.ComponentModel
@inject NavigationManager NavigationManager
@attribute [StreamRendering]
@* @attribute [Authorize]
 *@
 @inject GamesClient Client
@inject ICommonService CommonService

@if (CommonService.IsMobile)
{
@inject ActivityIndicatorState activityIndicatorState;
    
}


<PageTitle>Game Catelog</PageTitle>

<div class="text-end">

    <a role="button" class="btn btn-primary" href="/editgame">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16"></path>
            <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4"></path>
        </svg>
        New Game
    </a>
</div>



@if (games is null)
{
    <p><em>Loading...</em></p>
}
else
{
    if (CommonService.IsWeb)
    {
        <table class="table table-striped table-bordered table-hover mt-3">
            <thead class="table-dark">
            <th>Sr.</th>
            <th>Name</th>
            <th>Genre</th>
            <th>Price</th>
            <th>Release Date</th>
            <th>Modify</th>
            </thead>
            <tbody>
                @foreach (var game in games.Select((game, index) => new { game, index }))
                {
                    <tr>
                        <td>@(game.index + 1)</td>
                        <td>@game.game.Name</td>
                        <td>@game.game.Genre</td>
                        <td class="text-end">@game.game.Price.ToString("C2")</td>
                        <td>@game.game.ReleaseDate</td>
                        <td>
                            <div class="d-flex">

                                <a role="button" class="btn btn-primary me-2" href="/editgame/@game.game.Id">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                        <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                                        <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                                    </svg>
                                </a>
                                @* <a role="button" class="btn btn-danger me-2"
                                   data-bs-toggle="modal" data-bs-target="@GetDeleteModalId(game)">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                        <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                        <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                                    </svg>
                                </a> *@
                                <a role="button" class="btn btn-danger me-2"
                                   @onclick="()=>DeleteGame(game.game.Id.ToString())">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                        <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                        <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                                    </svg>
                                </a>
                            </div>
                            @* <DeleteGame Game="@game" /> *@
                        </td>
                    </tr>


                }
            </tbody>
        </table>
    }
    else
    {
        <div class="d-flex flex-column flex-nowrap overflow-auto">
        @foreach (var game in games)
        {
            <div class="card m-2" style="min-width: 250px;">
                <div class="card-body">
                    <h5 class="card-title">@game.Name</h5>
                    <h6 class="card-subtitle mb-2 text-muted">@game.Genre</h6>
                    <p class="card-text">Price: @game.Price.ToString("C2")</p>
                    <p class="card-text">Release Date: @game.ReleaseDate</p>
                        <a role="button" class="btn btn-primary me-2" href="/editgame/@game.Id">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                                <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                            </svg>
                        </a>
                       @*  <a role="button" class="btn btn-danger me-2"
                           data-bs-toggle="modal" data-bs-target="@GetDeleteModalId(game)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                            </svg>
                        </a> *@
                        <a role="button" class="btn btn-danger me-2"
                           @onclick="()=>DeleteGame(game.Id.ToString())">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                            </svg>
                        </a>
                </div>
            </div>
        }
    </div>
    }


}

@code {
    private GameSummary[]? games;

    protected override async Task OnInitializedAsync()
    {

        await LoadData();
        if (CommonService.IsMobile)
        {
            activityIndicatorState.IsRefreshing = false;
            activityIndicatorState.PropertyChanged += OnRefreshingChanged;
        }


    }
    private async void OnRefreshingChanged(object? sender, PropertyChangedEventArgs e)
    {
        if (e.PropertyName == nameof(activityIndicatorState.IsRefreshing) && activityIndicatorState.IsRefreshing)
        {
            await LoadData();
            activityIndicatorState.IsRefreshing = false;
            StateHasChanged();
        }
    }

    private async Task LoadData()
    {
        if (CommonService.IsMobile)
        {
            activityIndicatorState.IsActivityIndicatorRunning = true;
            games = await Client.GetGames();
            activityIndicatorState.IsActivityIndicatorRunning = false;
        }
        else
        {
            games = await Client.GetGames();
        }

    }



    // private string GetDeleteModalId(GameSummary game)
    // {
    //     // var result = DeleteGame.GetModalId(game);
    //     // return $"#{result}";
    // }

    private async Task DeleteGame(string id)
    {

        await Client.DeleteGame(id);
        await LoadData();
        StateHasChanged();
    }

    // private async Task DeletePopup(string game)
    // {
    //     @if (CommonService.IsMobile)
    //     {
    //         await PopUpService.ShowPopupAsync(new );
    //     }

    // }
}
